# Add this to your global 'http' block in nginx.conf
# Enables caching for the /checkVersion endpoint
# proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=checkversion_cache:10m inactive=60s max_size=100m;

# Optional: enable rate limiting (used in /checkVersion block below)
# limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;

server {
    listen 80;
    server_name faynosync.example.com;

    access_log /var/log/nginx/faynosync.access.log;
    error_log  /var/log/nginx/faynosync.error.log;

    client_max_body_size 1000M;

    # Default reverse proxy for backend API
    location / {
        proxy_pass http://127.0.0.1:9000;
        proxy_http_version 1.1;

        # Required headers for WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Pass through original host and client info
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Allow bypass for WebSocket upgrades
        proxy_cache_bypass $http_upgrade;

        # Optional timeout settings
        proxy_connect_timeout 60;
        proxy_send_timeout    60;
        proxy_read_timeout    60;
        send_timeout          60;
    }

    # Optimized location for version check with caching
    location = /checkVersion {
        proxy_pass http://127.0.0.1:9000;

        # Enable microcaching for 60 seconds
        proxy_cache checkversion_cache;
        proxy_cache_valid 200 60s;
        proxy_cache_key "$scheme$request_method$host$request_uri";

        # Use stale cache if backend is slow or returns error
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

        # Lock to prevent multiple upstream requests for the same key
        proxy_cache_lock               on;
        proxy_cache_lock_timeout      65s;
        proxy_cache_background_update on;

        # Add custom header to inspect cache hits/misses
        add_header X-Cache-Status $upstream_cache_status;

        # Optional: enable rate limiting to prevent abuse
        # Uncomment if needed
        # limit_req zone=req_limit burst=20 nodelay;

        # Standard proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60;
        proxy_send_timeout    60;
        proxy_read_timeout    60;
        send_timeout          60;
    }
}
